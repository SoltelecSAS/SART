/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.soltelec.procesosbanco.verificacion;

import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.soltelec.models.controllers.PipetaController;
import org.soltelec.models.entities.Pipeta;
import org.soltelec.procesosbanco.PuntoCalibracion;
import org.soltelec.util.Mensajes;

/**
 *Clase que muestra los valores de las pipetas dependiendo 
 * de los tiempos del motor. Permite tambien que se carguen y guarden los valors
 * de las pipetas en la base de datos
 * @author User
 */
public class PanelSeleccionMuestra extends javax.swing.JPanel {

    
    Pipeta puntoBaja4T,puntoAlta4T,puntoBaja2T,puntoAlta2T;
    /**
     * Creates new form PanelSeleccionMuestra
     */
    public PanelSeleccionMuestra() {
        initComponents();
        cargarValoresPipetas();
        pintarValorePipetas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        panelContenedor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        radioButton4t = new javax.swing.JRadioButton();
        radioButton2t = new javax.swing.JRadioButton();
        panel4t = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAlta4T = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBaja4T = new javax.swing.JTable();
        panel2T = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAlta2T = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableBaja2T = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("SELECCION DE MUESTRA");

        radioButton4t.setText("Vehiculos cuatro tiempos");
        radioButton4t.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButton4tItemStateChanged(evt);
            }
        });
        radioButton4t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton4tActionPerformed(evt);
            }
        });
        radioButton4t.setSelected(true);
        buttonGroup2.add(radioButton4t);

        radioButton2t.setText("Vehiculos dos tiempos");
        radioButton2t.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioButton2tStateChanged(evt);
            }
        });
        radioButton2t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton2tActionPerformed(evt);
            }
        });
        buttonGroup2.add(radioButton2t);

        panel4t.setBorder(javax.swing.BorderFactory.createTitledBorder("4T"));

        jTableAlta4T.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"HC", "1200"},
                {"CO", "4"},
                {"CO2", "12"}
            },
            new String [] {
                "Gas", "Valor"
            }
        ));
        jScrollPane2.setViewportView(jTableAlta4T);

        jTableBaja4T.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"HC", "300"},
                {"CO", "1"},
                {"CO2", "6"}
            },
            new String [] {
                "Gas", "Valor"
            }
        ));
        jScrollPane1.setViewportView(jTableBaja4T);

        javax.swing.GroupLayout panel4tLayout = new javax.swing.GroupLayout(panel4t);
        panel4t.setLayout(panel4tLayout);
        panel4tLayout.setHorizontalGroup(
            panel4tLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4tLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel4tLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panel4tLayout.setVerticalGroup(
            panel4tLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4tLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panel2T.setBorder(javax.swing.BorderFactory.createTitledBorder("2T"));

        jTableAlta2T.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"HC", "3200"},
                {"CO", "8"},
                {"CO2", "12"}
            },
            new String [] {
                "Gas", "Valor"
            }
        ));
        jScrollPane3.setViewportView(jTableAlta2T);

        jTableBaja2T.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"HC", "300"},
                {"CO", "1"},
                {"CO2", "6"}
            },
            new String [] {
                "Gas", "Valor"
            }
        ));
        jScrollPane4.setViewportView(jTableBaja2T);

        javax.swing.GroupLayout panel2TLayout = new javax.swing.GroupLayout(panel2T);
        panel2T.setLayout(panel2TLayout);
        panel2TLayout.setHorizontalGroup(
            panel2TLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2TLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2TLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panel2TLayout.setVerticalGroup(
            panel2TLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2TLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContenedorLayout.createSequentialGroup()
                        .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButton4t)
                            .addComponent(panel4t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel2T, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioButton2t)))
                    .addComponent(jLabel1))
                .addGap(5, 5, 5))
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(83, 83, 83)
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButton4t)
                    .addComponent(radioButton2t))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel4t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel2T, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioButton4tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton4tActionPerformed
        panel4t.setVisible(radioButton4t.isSelected());
    }//GEN-LAST:event_radioButton4tActionPerformed

    private void radioButton2tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton2tActionPerformed
        panel2T.setVisible(radioButton2t.isSelected());
    }//GEN-LAST:event_radioButton2tActionPerformed

    private void radioButton4tItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioButton4tItemStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_radioButton4tItemStateChanged

    private void radioButton2tStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioButton2tStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_radioButton2tStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (jTableAlta2T.isEditing()){
            jTableAlta2T.getCellEditor().stopCellEditing();
        }
        
        if(jTableAlta4T.isEditing()){
            jTableAlta4T.getCellEditor().stopCellEditing();
        }
        
        if(jTableBaja2T.isEditing()){
            jTableBaja2T.getCellEditor().stopCellEditing();
        }
        
        if(jTableBaja4T.isEditing()){
            jTableBaja4T.getCellEditor().stopCellEditing();
        }
        
        String validacion = obtenerValidarPuntos();
        JOptionPane.showMessageDialog(null,validacion);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableAlta2T;
    private javax.swing.JTable jTableAlta4T;
    private javax.swing.JTable jTableBaja2T;
    private javax.swing.JTable jTableBaja4T;
    private javax.swing.JPanel panel2T;
    private javax.swing.JPanel panel4t;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JRadioButton radioButton2t;
    private javax.swing.JRadioButton radioButton4t;
    // End of variables declaration//GEN-END:variables

    
    public int getTiempos(){
        return radioButton4t.isSelected() ? 4: 2;
    }
    
    public String obtenerValidarPuntos(){
        
        StringBuilder sb = new StringBuilder();
        
        try {
            Integer valorHCBaja4T = Integer.parseInt((String) jTableBaja4T.getModel().getValueAt(0,1) );
            puntoBaja4T.setHc(valorHCBaja4T);

            if( !( UtilVerificacion.estaEnRangoHC(TipoMuestra.BAJA_4T, valorHCBaja4T) ) ){
                sb.append("El valor de HC muestra baja 4T esta fuera de rango \n");
            }

            Integer valorCOBaja4T = Integer.parseInt((String) jTableBaja4T.getModel().getValueAt(1,1));
            puntoBaja4T.setCo(valorCOBaja4T);

            if (! UtilVerificacion.estaEnRangoCO(TipoMuestra.BAJA_4T, valorCOBaja4T)){
                sb.append("El valor de CO muestra baja 4T esta fuera de rango \n");
            }

            Integer valorCO2Baja4T = Integer.parseInt( (String) jTableBaja4T.getModel().getValueAt(2,1) );

            puntoBaja4T.setCo2(valorCO2Baja4T);

            if( ! UtilVerificacion.estaEnRangoCO2(TipoMuestra.BAJA_4T, valorCO2Baja4T) ){
                sb.append("El valor de CO2 muestra baja 4T esta fuera de rango \n");
            }

            Integer valorHCAlta4T = Integer.parseInt((String) jTableAlta4T.getModel().getValueAt(0,1));
            puntoAlta4T.setHc(valorHCAlta4T);

            if (!UtilVerificacion.estaEnRangoHC(TipoMuestra.ALTA_4T, valorHCAlta4T)){
                sb.append("El valor de HC muestra alta 4T esta fuera de rango \n");

            }

            Integer valorCOAlta4T = Integer.parseInt((String) jTableAlta4T.getModel().getValueAt(1,1) );//lo mete 1.05
            puntoAlta4T.setCo(valorCOAlta4T);

            if( !UtilVerificacion.estaEnRangoCO(TipoMuestra.ALTA_4T, valorCOAlta4T)){
                sb.append("El valor de CO muestra alta 4T esta fuera de rango \n");
            }

            Integer valorCO2Alta4T = Integer.parseInt((String) jTableAlta4T.getModel().getValueAt(2,1) );//puede ser 8.5 p.e.
            puntoAlta4T.setCo2(valorCO2Alta4T);

            if (! UtilVerificacion.estaEnRangoCO2(TipoMuestra.ALTA_4T, valorCO2Alta4T)){
                sb.append("El valor de CO2 muestra alta 4T esta fuera de rango \n");
            }

            Integer valorHCBaja2T = Integer.parseInt((String) jTableBaja2T.getModel().getValueAt(0,1) );

            puntoBaja2T.setHc(valorHCBaja2T);

            if ( !UtilVerificacion.estaEnRangoHC(TipoMuestra.BAJA_2T, valorHCBaja2T)){
                sb.append("El valor de HC muestra baja 2T esta fuera de rango \n");
            }

            Integer valorCOBaja2T = Integer.parseInt((String) jTableBaja2T.getModel().getValueAt(1,1));
            puntoBaja2T.setCo(valorCOBaja2T);

            if(! UtilVerificacion.estaEnRangoCO(TipoMuestra.BAJA_2T, valorCOBaja2T)){
                sb.append("El valor de CO muestra baja 2T esta fuera de rango\n");
            }

            Integer valorCO2Baja2T = Integer.parseInt( (String) jTableBaja2T.getModel().getValueAt(2,1) );
            puntoBaja2T.setCo2(valorCO2Baja2T);

            if(! UtilVerificacion.estaEnRangoCO2(TipoMuestra.BAJA_2T, valorCO2Baja2T)){
                sb.append(" El valor de CO2 muestra baja 2T esta fuera de rango\n");
            }

            Integer valorHCAlta2T = Integer.parseInt ((String) jTableAlta2T.getModel().getValueAt(0,1) );
            puntoAlta2T.setHc(valorHCAlta2T);

            if (! UtilVerificacion.estaEnRangoHC(TipoMuestra.ALTA_2T, valorHCAlta2T)){
                sb.append( "El valor de HC muestra alta 2T esta fuera de rango \n");
            }

            Integer valorCOAlta2T = Integer.parseInt( (String) jTableAlta2T.getModel().getValueAt(1,1) );
            puntoAlta2T.setCo(valorCOAlta2T);

            if( ! UtilVerificacion.estaEnRangoCO(TipoMuestra.ALTA_2T, valorCOAlta2T)){
                sb.append(" El valor de CO muestra alta 2T esta fuera de rango\n");
            }

            Integer valorCO2Alta2T = Integer.parseInt( (String) jTableAlta2T.getModel().getValueAt(2,1));
            puntoAlta2T.setCo2(valorCO2Alta2T);

            if( ! UtilVerificacion.estaEnRangoCO2(TipoMuestra.ALTA_2T, valorCO2Alta2T)){
                sb.append(" El valor de CO2 muestra alta 2T esta fuera de rango\n");
            }
        }//end of try

        catch(NumberFormatException nexc){
            JOptionPane.showMessageDialog(null,"Ha introducido un valor que no se puede convertir a numero: " );
        }

        if(sb.toString().isEmpty()){
            try {
                PipetaController pipetaController = new PipetaController();
                pipetaController.edit(puntoBaja2T);
                pipetaController.edit(puntoAlta2T);
                pipetaController.edit(puntoBaja4T);
                pipetaController.edit(puntoAlta4T);
            } catch (SQLException | ClassNotFoundException | IOException ex) {
                Mensajes.mostrarExcepcion(ex);
            }
        }
        
       return sb.toString();
    }

public static void main(String args[]){
    
    JFrame app = new JFrame("Pruebas");
    PanelSeleccionMuestra panel = new PanelSeleccionMuestra();
    app.getContentPane().add(panel);
    app.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    app.setExtendedState(JFrame.MAXIMIZED_BOTH);
    app.setVisible(true);
    
}

    private void cargarValoresPipetas() {
        try {
            PipetaController pipetaController = new PipetaController();
            puntoBaja2T = pipetaController.findPipetaByTiempos("2TBaja");
            puntoAlta2T = pipetaController.findPipetaByTiempos("2TAlta");
            puntoBaja4T = pipetaController.findPipetaByTiempos("4TBaja");
            puntoAlta4T = pipetaController.findPipetaByTiempos("4TAlta");
        } catch (SQLException | ClassNotFoundException | IOException ex) {
            Mensajes.mostrarExcepcion(ex);
        }
    }

    private void pintarValorePipetas() {
        
        if(puntoBaja4T != null ){
            jTableBaja4T.setValueAt( String.valueOf(puntoBaja4T.getHc()) , 0, 1);
            jTableBaja4T.setValueAt( String.valueOf (puntoBaja4T.getCo() * 0.01 ), 1, 1);
            jTableBaja4T.setValueAt(String.valueOf(puntoBaja4T.getCo2()*0.1 ),2,1);
        }
        
        if( puntoAlta4T != null){
            jTableAlta4T.setValueAt( String.valueOf( puntoAlta4T.getHc()), 0, 1 );
            jTableAlta4T.setValueAt( String.valueOf( puntoAlta4T.getCo() * 0.01), 1, 1);
            jTableAlta4T.setValueAt( String.valueOf( puntoAlta4T.getCo2() * 0.1), 2, 1);
        }
        
        if( puntoBaja2T != null){
            jTableBaja2T.setValueAt( String.valueOf( puntoBaja2T.getHc()),0,1);
            jTableBaja2T.setValueAt( String.valueOf( puntoBaja2T.getCo()*0.01), 1, 1);
            jTableBaja2T.setValueAt( String.valueOf( puntoBaja2T.getCo2() * 0.1),2, 1);
        
        }
        
        if (puntoAlta2T != null){
            jTableAlta2T.setValueAt( String.valueOf( puntoAlta2T.getHc()), 0, 1);
            jTableAlta2T.setValueAt( String.valueOf( puntoAlta2T.getCo()*0.01), 1, 1);
            jTableAlta2T.setValueAt( String.valueOf(puntoAlta2T.getCo2()*0.1), 2, 1);
        }
    }



}